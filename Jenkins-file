pipeline {
  agent any

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/dpham2123/8.2CDevSecOps.git'
      }
    }

    stage('Install Dependencies') {
      steps {
        bat 'npm ci || npm install'
      }
    }

    stage('Run Tests') {
      steps {
        // Continues even if tests fail
        bat 'npm test || exit /b 0'
      }
      post {
        always {
          emailext(
            to: 'pduy14266@gmail.com',
            subject: "Test Stage - Build #${env.BUILD_NUMBER}",
            body: """Job: ${env.JOB_NAME}
Build: ${env.BUILD_URL}
Stage: ${env.STAGE_NAME}
Result: ${currentBuild.currentResult}""",
            attachLog: true,      // attach the console output as the log attachment
            compressLog: true     // optional: zip the log
          )
        }
      }
    }

    stage('Generate Coverage Report') {
      steps {
        bat 'npm run coverage || exit /b 0'
      }
    }

    stage('NPM Audit (Security Scan)') {
      steps {
        bat 'npm audit || exit /b 0' // show CVEs without failing build
      }
      post {
        always {
          emailext(
            to: 'pduy14266@gmail.com',
            subject: "Security Scan Stage - Build #${env.BUILD_NUMBER}",
            body: """Job: ${env.JOB_NAME}
Build: ${env.BUILD_URL}
Stage: ${env.STAGE_NAME}
Result: ${currentBuild.currentResult}""",
            attachLog: true,
            compressLog: true
          )
        }
      }
    }
  }
}










